// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package scaleway

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type LbBeta struct {
	pulumi.CustomResourceState

	// The load-balance public IP address
	IpAddress pulumi.StringOutput `pulumi:"ipAddress"`
	// The load-balance public IP ID
	IpId pulumi.StringOutput `pulumi:"ipId"`
	// Name of the lb
	Name pulumi.StringOutput `pulumi:"name"`
	// The organization_id you want to attach the resource to
	OrganizationId pulumi.StringOutput `pulumi:"organizationId"`
	// The region you want to attach the resource to
	Region pulumi.StringOutput `pulumi:"region"`
	// Array of tags to associate with the load-balancer
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
	// The type of load-balancer you want to create
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewLbBeta registers a new resource with the given unique name, arguments, and options.
func NewLbBeta(ctx *pulumi.Context,
	name string, args *LbBetaArgs, opts ...pulumi.ResourceOption) (*LbBeta, error) {
	if args == nil || args.IpId == nil {
		return nil, errors.New("missing required argument 'IpId'")
	}
	if args == nil || args.Type == nil {
		return nil, errors.New("missing required argument 'Type'")
	}
	if args == nil {
		args = &LbBetaArgs{}
	}
	var resource LbBeta
	err := ctx.RegisterResource("scaleway:index/lbBeta:LbBeta", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLbBeta gets an existing LbBeta resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLbBeta(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LbBetaState, opts ...pulumi.ResourceOption) (*LbBeta, error) {
	var resource LbBeta
	err := ctx.ReadResource("scaleway:index/lbBeta:LbBeta", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LbBeta resources.
type lbBetaState struct {
	// The load-balance public IP address
	IpAddress *string `pulumi:"ipAddress"`
	// The load-balance public IP ID
	IpId *string `pulumi:"ipId"`
	// Name of the lb
	Name *string `pulumi:"name"`
	// The organization_id you want to attach the resource to
	OrganizationId *string `pulumi:"organizationId"`
	// The region you want to attach the resource to
	Region *string `pulumi:"region"`
	// Array of tags to associate with the load-balancer
	Tags []string `pulumi:"tags"`
	// The type of load-balancer you want to create
	Type *string `pulumi:"type"`
}

type LbBetaState struct {
	// The load-balance public IP address
	IpAddress pulumi.StringPtrInput
	// The load-balance public IP ID
	IpId pulumi.StringPtrInput
	// Name of the lb
	Name pulumi.StringPtrInput
	// The organization_id you want to attach the resource to
	OrganizationId pulumi.StringPtrInput
	// The region you want to attach the resource to
	Region pulumi.StringPtrInput
	// Array of tags to associate with the load-balancer
	Tags pulumi.StringArrayInput
	// The type of load-balancer you want to create
	Type pulumi.StringPtrInput
}

func (LbBetaState) ElementType() reflect.Type {
	return reflect.TypeOf((*lbBetaState)(nil)).Elem()
}

type lbBetaArgs struct {
	// The load-balance public IP ID
	IpId string `pulumi:"ipId"`
	// Name of the lb
	Name *string `pulumi:"name"`
	// The organization_id you want to attach the resource to
	OrganizationId *string `pulumi:"organizationId"`
	// The region you want to attach the resource to
	Region *string `pulumi:"region"`
	// Array of tags to associate with the load-balancer
	Tags []string `pulumi:"tags"`
	// The type of load-balancer you want to create
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a LbBeta resource.
type LbBetaArgs struct {
	// The load-balance public IP ID
	IpId pulumi.StringInput
	// Name of the lb
	Name pulumi.StringPtrInput
	// The organization_id you want to attach the resource to
	OrganizationId pulumi.StringPtrInput
	// The region you want to attach the resource to
	Region pulumi.StringPtrInput
	// Array of tags to associate with the load-balancer
	Tags pulumi.StringArrayInput
	// The type of load-balancer you want to create
	Type pulumi.StringInput
}

func (LbBetaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*lbBetaArgs)(nil)).Elem()
}
