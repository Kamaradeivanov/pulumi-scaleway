# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from . import utilities, tables


class InstanceSecurityGroupRules(pulumi.CustomResource):
    inbound_rules: pulumi.Output[list]
    """
    Inbound rules for this set of security group rules

      * `action` (`str`)
      * `ip` (`str`)
      * `ip_range` (`str`)
      * `port` (`float`)
      * `portRange` (`str`)
      * `protocol` (`str`)
    """
    outbound_rules: pulumi.Output[list]
    """
    Outbound rules for this set of security group rules

      * `action` (`str`)
      * `ip` (`str`)
      * `ip_range` (`str`)
      * `port` (`float`)
      * `portRange` (`str`)
      * `protocol` (`str`)
    """
    security_group_id: pulumi.Output[str]
    """
    The security group associated with this volume
    """
    def __init__(__self__, resource_name, opts=None, inbound_rules=None, outbound_rules=None, security_group_id=None, __props__=None, __name__=None, __opts__=None):
        """
        Create a InstanceSecurityGroupRules resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[list] inbound_rules: Inbound rules for this set of security group rules
        :param pulumi.Input[list] outbound_rules: Outbound rules for this set of security group rules
        :param pulumi.Input[str] security_group_id: The security group associated with this volume

        The **inbound_rules** object supports the following:

          * `action` (`pulumi.Input[str]`)
          * `ip` (`pulumi.Input[str]`)
          * `ip_range` (`pulumi.Input[str]`)
          * `port` (`pulumi.Input[float]`)
          * `portRange` (`pulumi.Input[str]`)
          * `protocol` (`pulumi.Input[str]`)

        The **outbound_rules** object supports the following:

          * `action` (`pulumi.Input[str]`)
          * `ip` (`pulumi.Input[str]`)
          * `ip_range` (`pulumi.Input[str]`)
          * `port` (`pulumi.Input[float]`)
          * `portRange` (`pulumi.Input[str]`)
          * `protocol` (`pulumi.Input[str]`)
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['inbound_rules'] = inbound_rules
            __props__['outbound_rules'] = outbound_rules
            if security_group_id is None:
                raise TypeError("Missing required property 'security_group_id'")
            __props__['security_group_id'] = security_group_id
        super(InstanceSecurityGroupRules, __self__).__init__(
            'scaleway:index/instanceSecurityGroupRules:InstanceSecurityGroupRules',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None, inbound_rules=None, outbound_rules=None, security_group_id=None):
        """
        Get an existing InstanceSecurityGroupRules resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[list] inbound_rules: Inbound rules for this set of security group rules
        :param pulumi.Input[list] outbound_rules: Outbound rules for this set of security group rules
        :param pulumi.Input[str] security_group_id: The security group associated with this volume

        The **inbound_rules** object supports the following:

          * `action` (`pulumi.Input[str]`)
          * `ip` (`pulumi.Input[str]`)
          * `ip_range` (`pulumi.Input[str]`)
          * `port` (`pulumi.Input[float]`)
          * `portRange` (`pulumi.Input[str]`)
          * `protocol` (`pulumi.Input[str]`)

        The **outbound_rules** object supports the following:

          * `action` (`pulumi.Input[str]`)
          * `ip` (`pulumi.Input[str]`)
          * `ip_range` (`pulumi.Input[str]`)
          * `port` (`pulumi.Input[float]`)
          * `portRange` (`pulumi.Input[str]`)
          * `protocol` (`pulumi.Input[str]`)
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        __props__["inbound_rules"] = inbound_rules
        __props__["outbound_rules"] = outbound_rules
        __props__["security_group_id"] = security_group_id
        return InstanceSecurityGroupRules(resource_name, opts=opts, __props__=__props__)

    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop
