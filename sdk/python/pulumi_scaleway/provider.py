# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from . import utilities, tables


class Provider(pulumi.ProviderResource):
    def __init__(__self__, resource_name, opts=None, access_key=None, organization=None, organization_id=None, region=None, secret_key=None, token=None, zone=None, __props__=None, __name__=None, __opts__=None):
        """
        The provider type for the scaleway package. By default, resources use package-wide configuration
        settings, however an explicit `Provider` instance may be created and passed during resource
        construction to achieve fine-grained programmatic control over provider settings. See the
        [documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] access_key: The Scaleway access key.
        :param pulumi.Input[str] organization_id: The Scaleway organization ID.
        :param pulumi.Input[str] region: The Scaleway default region to use for your resources.
        :param pulumi.Input[str] secret_key: The Scaleway secret Key.
        :param pulumi.Input[str] zone: The Scaleway default zone to use for your resources.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            if access_key is None:
                access_key = utilities.get_env('SCW_ACCESS_KEY')
            __props__['access_key'] = access_key
            if organization is not None:
                warnings.warn("Use `organization_id` instead.", DeprecationWarning)
                pulumi.log.warn("organization is deprecated: Use `organization_id` instead.")
            __props__['organization'] = organization
            if organization_id is None:
                organization_id = utilities.get_env('SCW_DEFAULT_ORGANIZATION_ID')
            __props__['organization_id'] = organization_id
            if region is None:
                region = utilities.get_env('SCW_DEFAULT_REGION')
            __props__['region'] = region
            if secret_key is None:
                secret_key = utilities.get_env('SCW_SECRET_KEY')
            __props__['secret_key'] = secret_key
            if token is not None:
                warnings.warn("Use `secret_key` instead.", DeprecationWarning)
                pulumi.log.warn("token is deprecated: Use `secret_key` instead.")
            __props__['token'] = token
            if zone is None:
                zone = utilities.get_env('SCW_DEFAULT_ZONE')
            __props__['zone'] = zone
        super(Provider, __self__).__init__(
            'scaleway',
            resource_name,
            __props__,
            opts)

    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop
