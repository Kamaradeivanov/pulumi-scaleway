// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package scaleway

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type K8SClusterBeta struct {
	pulumi.CustomResourceState

	// The list of admission plugins to enable on the cluster
	AdmissionPlugins pulumi.StringArrayOutput `pulumi:"admissionPlugins"`
	// Kubernetes API server URL
	ApiserverUrl pulumi.StringOutput `pulumi:"apiserverUrl"`
	// The auto upgrade configuration for the cluster
	AutoUpgrade K8SClusterBetaAutoUpgradeOutput `pulumi:"autoUpgrade"`
	// The autoscaler configuration for the cluster
	AutoscalerConfig K8SClusterBetaAutoscalerConfigOutput `pulumi:"autoscalerConfig"`
	// The CNI plugin of the cluster
	Cni pulumi.StringOutput `pulumi:"cni"`
	// The date and time of the creation of the Kubernetes cluster
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Default pool created for the cluster on creation
	//
	// Deprecated: This fields is deprecated and will be removed in the next major version, please use scaleway_k8s_pool_beta instead.
	DefaultPool K8SClusterBetaDefaultPoolPtrOutput `pulumi:"defaultPool"`
	// The description of the cluster
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Enable the dashboard on the cluster
	EnableDashboard pulumi.BoolPtrOutput `pulumi:"enableDashboard"`
	// The list of feature gates to enable on the cluster
	FeatureGates pulumi.StringArrayOutput `pulumi:"featureGates"`
	// The ingress to be deployed on the cluster
	Ingress pulumi.StringPtrOutput `pulumi:"ingress"`
	// The kubeconfig configuration file of the Kubernetes cluster
	Kubeconfig K8SClusterBetaKubeconfigOutput `pulumi:"kubeconfig"`
	// The name of the cluster
	Name pulumi.StringOutput `pulumi:"name"`
	// The organization_id you want to attach the resource to
	OrganizationId pulumi.StringOutput `pulumi:"organizationId"`
	// The region you want to attach the resource to
	Region pulumi.StringOutput `pulumi:"region"`
	// The status of the cluster
	Status pulumi.StringOutput `pulumi:"status"`
	// The tags associated with the cluster
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
	// The date and time of the last update of the Kubernetes cluster
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
	// True if an upgrade is available
	UpgradeAvailable pulumi.BoolOutput `pulumi:"upgradeAvailable"`
	// The version of the cluster
	Version pulumi.StringOutput `pulumi:"version"`
	// Wildcard DNS pointing to all the ready nodes
	WildcardDns pulumi.StringOutput `pulumi:"wildcardDns"`
}

// NewK8SClusterBeta registers a new resource with the given unique name, arguments, and options.
func NewK8SClusterBeta(ctx *pulumi.Context,
	name string, args *K8SClusterBetaArgs, opts ...pulumi.ResourceOption) (*K8SClusterBeta, error) {
	if args == nil || args.Cni == nil {
		return nil, errors.New("missing required argument 'Cni'")
	}
	if args == nil || args.Version == nil {
		return nil, errors.New("missing required argument 'Version'")
	}
	if args == nil {
		args = &K8SClusterBetaArgs{}
	}
	var resource K8SClusterBeta
	err := ctx.RegisterResource("scaleway:index/k8SClusterBeta:K8SClusterBeta", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetK8SClusterBeta gets an existing K8SClusterBeta resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetK8SClusterBeta(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *K8SClusterBetaState, opts ...pulumi.ResourceOption) (*K8SClusterBeta, error) {
	var resource K8SClusterBeta
	err := ctx.ReadResource("scaleway:index/k8SClusterBeta:K8SClusterBeta", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering K8SClusterBeta resources.
type k8sclusterBetaState struct {
	// The list of admission plugins to enable on the cluster
	AdmissionPlugins []string `pulumi:"admissionPlugins"`
	// Kubernetes API server URL
	ApiserverUrl *string `pulumi:"apiserverUrl"`
	// The auto upgrade configuration for the cluster
	AutoUpgrade *K8SClusterBetaAutoUpgrade `pulumi:"autoUpgrade"`
	// The autoscaler configuration for the cluster
	AutoscalerConfig *K8SClusterBetaAutoscalerConfig `pulumi:"autoscalerConfig"`
	// The CNI plugin of the cluster
	Cni *string `pulumi:"cni"`
	// The date and time of the creation of the Kubernetes cluster
	CreatedAt *string `pulumi:"createdAt"`
	// Default pool created for the cluster on creation
	//
	// Deprecated: This fields is deprecated and will be removed in the next major version, please use scaleway_k8s_pool_beta instead.
	DefaultPool *K8SClusterBetaDefaultPool `pulumi:"defaultPool"`
	// The description of the cluster
	Description *string `pulumi:"description"`
	// Enable the dashboard on the cluster
	EnableDashboard *bool `pulumi:"enableDashboard"`
	// The list of feature gates to enable on the cluster
	FeatureGates []string `pulumi:"featureGates"`
	// The ingress to be deployed on the cluster
	Ingress *string `pulumi:"ingress"`
	// The kubeconfig configuration file of the Kubernetes cluster
	Kubeconfig *K8SClusterBetaKubeconfig `pulumi:"kubeconfig"`
	// The name of the cluster
	Name *string `pulumi:"name"`
	// The organization_id you want to attach the resource to
	OrganizationId *string `pulumi:"organizationId"`
	// The region you want to attach the resource to
	Region *string `pulumi:"region"`
	// The status of the cluster
	Status *string `pulumi:"status"`
	// The tags associated with the cluster
	Tags []string `pulumi:"tags"`
	// The date and time of the last update of the Kubernetes cluster
	UpdatedAt *string `pulumi:"updatedAt"`
	// True if an upgrade is available
	UpgradeAvailable *bool `pulumi:"upgradeAvailable"`
	// The version of the cluster
	Version *string `pulumi:"version"`
	// Wildcard DNS pointing to all the ready nodes
	WildcardDns *string `pulumi:"wildcardDns"`
}

type K8SClusterBetaState struct {
	// The list of admission plugins to enable on the cluster
	AdmissionPlugins pulumi.StringArrayInput
	// Kubernetes API server URL
	ApiserverUrl pulumi.StringPtrInput
	// The auto upgrade configuration for the cluster
	AutoUpgrade K8SClusterBetaAutoUpgradePtrInput
	// The autoscaler configuration for the cluster
	AutoscalerConfig K8SClusterBetaAutoscalerConfigPtrInput
	// The CNI plugin of the cluster
	Cni pulumi.StringPtrInput
	// The date and time of the creation of the Kubernetes cluster
	CreatedAt pulumi.StringPtrInput
	// Default pool created for the cluster on creation
	//
	// Deprecated: This fields is deprecated and will be removed in the next major version, please use scaleway_k8s_pool_beta instead.
	DefaultPool K8SClusterBetaDefaultPoolPtrInput
	// The description of the cluster
	Description pulumi.StringPtrInput
	// Enable the dashboard on the cluster
	EnableDashboard pulumi.BoolPtrInput
	// The list of feature gates to enable on the cluster
	FeatureGates pulumi.StringArrayInput
	// The ingress to be deployed on the cluster
	Ingress pulumi.StringPtrInput
	// The kubeconfig configuration file of the Kubernetes cluster
	Kubeconfig K8SClusterBetaKubeconfigPtrInput
	// The name of the cluster
	Name pulumi.StringPtrInput
	// The organization_id you want to attach the resource to
	OrganizationId pulumi.StringPtrInput
	// The region you want to attach the resource to
	Region pulumi.StringPtrInput
	// The status of the cluster
	Status pulumi.StringPtrInput
	// The tags associated with the cluster
	Tags pulumi.StringArrayInput
	// The date and time of the last update of the Kubernetes cluster
	UpdatedAt pulumi.StringPtrInput
	// True if an upgrade is available
	UpgradeAvailable pulumi.BoolPtrInput
	// The version of the cluster
	Version pulumi.StringPtrInput
	// Wildcard DNS pointing to all the ready nodes
	WildcardDns pulumi.StringPtrInput
}

func (K8SClusterBetaState) ElementType() reflect.Type {
	return reflect.TypeOf((*k8sclusterBetaState)(nil)).Elem()
}

type k8sclusterBetaArgs struct {
	// The list of admission plugins to enable on the cluster
	AdmissionPlugins []string `pulumi:"admissionPlugins"`
	// The auto upgrade configuration for the cluster
	AutoUpgrade *K8SClusterBetaAutoUpgrade `pulumi:"autoUpgrade"`
	// The autoscaler configuration for the cluster
	AutoscalerConfig *K8SClusterBetaAutoscalerConfig `pulumi:"autoscalerConfig"`
	// The CNI plugin of the cluster
	Cni string `pulumi:"cni"`
	// Default pool created for the cluster on creation
	//
	// Deprecated: This fields is deprecated and will be removed in the next major version, please use scaleway_k8s_pool_beta instead.
	DefaultPool *K8SClusterBetaDefaultPool `pulumi:"defaultPool"`
	// The description of the cluster
	Description *string `pulumi:"description"`
	// Enable the dashboard on the cluster
	EnableDashboard *bool `pulumi:"enableDashboard"`
	// The list of feature gates to enable on the cluster
	FeatureGates []string `pulumi:"featureGates"`
	// The ingress to be deployed on the cluster
	Ingress *string `pulumi:"ingress"`
	// The name of the cluster
	Name *string `pulumi:"name"`
	// The organization_id you want to attach the resource to
	OrganizationId *string `pulumi:"organizationId"`
	// The region you want to attach the resource to
	Region *string `pulumi:"region"`
	// The tags associated with the cluster
	Tags []string `pulumi:"tags"`
	// The version of the cluster
	Version string `pulumi:"version"`
}

// The set of arguments for constructing a K8SClusterBeta resource.
type K8SClusterBetaArgs struct {
	// The list of admission plugins to enable on the cluster
	AdmissionPlugins pulumi.StringArrayInput
	// The auto upgrade configuration for the cluster
	AutoUpgrade K8SClusterBetaAutoUpgradePtrInput
	// The autoscaler configuration for the cluster
	AutoscalerConfig K8SClusterBetaAutoscalerConfigPtrInput
	// The CNI plugin of the cluster
	Cni pulumi.StringInput
	// Default pool created for the cluster on creation
	//
	// Deprecated: This fields is deprecated and will be removed in the next major version, please use scaleway_k8s_pool_beta instead.
	DefaultPool K8SClusterBetaDefaultPoolPtrInput
	// The description of the cluster
	Description pulumi.StringPtrInput
	// Enable the dashboard on the cluster
	EnableDashboard pulumi.BoolPtrInput
	// The list of feature gates to enable on the cluster
	FeatureGates pulumi.StringArrayInput
	// The ingress to be deployed on the cluster
	Ingress pulumi.StringPtrInput
	// The name of the cluster
	Name pulumi.StringPtrInput
	// The organization_id you want to attach the resource to
	OrganizationId pulumi.StringPtrInput
	// The region you want to attach the resource to
	Region pulumi.StringPtrInput
	// The tags associated with the cluster
	Tags pulumi.StringArrayInput
	// The version of the cluster
	Version pulumi.StringInput
}

func (K8SClusterBetaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*k8sclusterBetaArgs)(nil)).Elem()
}
