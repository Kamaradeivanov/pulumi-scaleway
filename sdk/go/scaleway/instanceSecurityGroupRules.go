// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package scaleway

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type InstanceSecurityGroupRules struct {
	pulumi.CustomResourceState

	// Inbound rules for this set of security group rules
	InboundRules InstanceSecurityGroupRulesInboundRuleArrayOutput `pulumi:"inboundRules"`
	// Outbound rules for this set of security group rules
	OutboundRules InstanceSecurityGroupRulesOutboundRuleArrayOutput `pulumi:"outboundRules"`
	// The security group associated with this volume
	SecurityGroupId pulumi.StringOutput `pulumi:"securityGroupId"`
}

// NewInstanceSecurityGroupRules registers a new resource with the given unique name, arguments, and options.
func NewInstanceSecurityGroupRules(ctx *pulumi.Context,
	name string, args *InstanceSecurityGroupRulesArgs, opts ...pulumi.ResourceOption) (*InstanceSecurityGroupRules, error) {
	if args == nil || args.SecurityGroupId == nil {
		return nil, errors.New("missing required argument 'SecurityGroupId'")
	}
	if args == nil {
		args = &InstanceSecurityGroupRulesArgs{}
	}
	var resource InstanceSecurityGroupRules
	err := ctx.RegisterResource("scaleway:index/instanceSecurityGroupRules:InstanceSecurityGroupRules", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstanceSecurityGroupRules gets an existing InstanceSecurityGroupRules resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstanceSecurityGroupRules(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceSecurityGroupRulesState, opts ...pulumi.ResourceOption) (*InstanceSecurityGroupRules, error) {
	var resource InstanceSecurityGroupRules
	err := ctx.ReadResource("scaleway:index/instanceSecurityGroupRules:InstanceSecurityGroupRules", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering InstanceSecurityGroupRules resources.
type instanceSecurityGroupRulesState struct {
	// Inbound rules for this set of security group rules
	InboundRules []InstanceSecurityGroupRulesInboundRule `pulumi:"inboundRules"`
	// Outbound rules for this set of security group rules
	OutboundRules []InstanceSecurityGroupRulesOutboundRule `pulumi:"outboundRules"`
	// The security group associated with this volume
	SecurityGroupId *string `pulumi:"securityGroupId"`
}

type InstanceSecurityGroupRulesState struct {
	// Inbound rules for this set of security group rules
	InboundRules InstanceSecurityGroupRulesInboundRuleArrayInput
	// Outbound rules for this set of security group rules
	OutboundRules InstanceSecurityGroupRulesOutboundRuleArrayInput
	// The security group associated with this volume
	SecurityGroupId pulumi.StringPtrInput
}

func (InstanceSecurityGroupRulesState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceSecurityGroupRulesState)(nil)).Elem()
}

type instanceSecurityGroupRulesArgs struct {
	// Inbound rules for this set of security group rules
	InboundRules []InstanceSecurityGroupRulesInboundRule `pulumi:"inboundRules"`
	// Outbound rules for this set of security group rules
	OutboundRules []InstanceSecurityGroupRulesOutboundRule `pulumi:"outboundRules"`
	// The security group associated with this volume
	SecurityGroupId string `pulumi:"securityGroupId"`
}

// The set of arguments for constructing a InstanceSecurityGroupRules resource.
type InstanceSecurityGroupRulesArgs struct {
	// Inbound rules for this set of security group rules
	InboundRules InstanceSecurityGroupRulesInboundRuleArrayInput
	// Outbound rules for this set of security group rules
	OutboundRules InstanceSecurityGroupRulesOutboundRuleArrayInput
	// The security group associated with this volume
	SecurityGroupId pulumi.StringInput
}

func (InstanceSecurityGroupRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceSecurityGroupRulesArgs)(nil)).Elem()
}
