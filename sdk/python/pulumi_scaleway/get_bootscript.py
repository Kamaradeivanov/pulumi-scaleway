# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from . import utilities, tables

class GetBootscriptResult:
    """
    A collection of values returned by getBootscript.
    """
    def __init__(__self__, architecture=None, boot_cmd_args=None, dtb=None, id=None, initrd=None, kernel=None, name=None, name_filter=None, organization=None, public=None):
        if architecture and not isinstance(architecture, str):
            raise TypeError("Expected argument 'architecture' to be a str")
        __self__.architecture = architecture
        if boot_cmd_args and not isinstance(boot_cmd_args, str):
            raise TypeError("Expected argument 'boot_cmd_args' to be a str")
        __self__.boot_cmd_args = boot_cmd_args
        if dtb and not isinstance(dtb, str):
            raise TypeError("Expected argument 'dtb' to be a str")
        __self__.dtb = dtb
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        __self__.id = id
        """
        The provider-assigned unique ID for this managed resource.
        """
        if initrd and not isinstance(initrd, str):
            raise TypeError("Expected argument 'initrd' to be a str")
        __self__.initrd = initrd
        if kernel and not isinstance(kernel, str):
            raise TypeError("Expected argument 'kernel' to be a str")
        __self__.kernel = kernel
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        __self__.name = name
        if name_filter and not isinstance(name_filter, str):
            raise TypeError("Expected argument 'name_filter' to be a str")
        __self__.name_filter = name_filter
        if organization and not isinstance(organization, str):
            raise TypeError("Expected argument 'organization' to be a str")
        __self__.organization = organization
        if public and not isinstance(public, bool):
            raise TypeError("Expected argument 'public' to be a bool")
        __self__.public = public
class AwaitableGetBootscriptResult(GetBootscriptResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetBootscriptResult(
            architecture=self.architecture,
            boot_cmd_args=self.boot_cmd_args,
            dtb=self.dtb,
            id=self.id,
            initrd=self.initrd,
            kernel=self.kernel,
            name=self.name,
            name_filter=self.name_filter,
            organization=self.organization,
            public=self.public)

def get_bootscript(architecture=None,name=None,name_filter=None,opts=None):
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()


    __args__['architecture'] = architecture
    __args__['name'] = name
    __args__['nameFilter'] = name_filter
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = utilities.get_version()
    __ret__ = pulumi.runtime.invoke('scaleway:index/getBootscript:getBootscript', __args__, opts=opts).value

    return AwaitableGetBootscriptResult(
        architecture=__ret__.get('architecture'),
        boot_cmd_args=__ret__.get('bootCmdArgs'),
        dtb=__ret__.get('dtb'),
        id=__ret__.get('id'),
        initrd=__ret__.get('initrd'),
        kernel=__ret__.get('kernel'),
        name=__ret__.get('name'),
        name_filter=__ret__.get('nameFilter'),
        organization=__ret__.get('organization'),
        public=__ret__.get('public'))
