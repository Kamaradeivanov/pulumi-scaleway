# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from . import utilities, tables

class GetImageResult:
    """
    A collection of values returned by getImage.
    """
    def __init__(__self__, architecture=None, creation_date=None, id=None, most_recent=None, name=None, name_filter=None, organization=None, public=None):
        if architecture and not isinstance(architecture, str):
            raise TypeError("Expected argument 'architecture' to be a str")
        __self__.architecture = architecture
        if creation_date and not isinstance(creation_date, str):
            raise TypeError("Expected argument 'creation_date' to be a str")
        __self__.creation_date = creation_date
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        __self__.id = id
        """
        The provider-assigned unique ID for this managed resource.
        """
        if most_recent and not isinstance(most_recent, bool):
            raise TypeError("Expected argument 'most_recent' to be a bool")
        __self__.most_recent = most_recent
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        __self__.name = name
        if name_filter and not isinstance(name_filter, str):
            raise TypeError("Expected argument 'name_filter' to be a str")
        __self__.name_filter = name_filter
        if organization and not isinstance(organization, str):
            raise TypeError("Expected argument 'organization' to be a str")
        __self__.organization = organization
        if public and not isinstance(public, bool):
            raise TypeError("Expected argument 'public' to be a bool")
        __self__.public = public
class AwaitableGetImageResult(GetImageResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetImageResult(
            architecture=self.architecture,
            creation_date=self.creation_date,
            id=self.id,
            most_recent=self.most_recent,
            name=self.name,
            name_filter=self.name_filter,
            organization=self.organization,
            public=self.public)

def get_image(architecture=None,most_recent=None,name=None,name_filter=None,opts=None):
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()


    __args__['architecture'] = architecture
    __args__['mostRecent'] = most_recent
    __args__['name'] = name
    __args__['nameFilter'] = name_filter
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = utilities.get_version()
    __ret__ = pulumi.runtime.invoke('scaleway:index/getImage:getImage', __args__, opts=opts).value

    return AwaitableGetImageResult(
        architecture=__ret__.get('architecture'),
        creation_date=__ret__.get('creationDate'),
        id=__ret__.get('id'),
        most_recent=__ret__.get('mostRecent'),
        name=__ret__.get('name'),
        name_filter=__ret__.get('nameFilter'),
        organization=__ret__.get('organization'),
        public=__ret__.get('public'))
