# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from . import utilities, tables


class BaremetalServer(pulumi.CustomResource):
    description: pulumi.Output[str]
    """
    Some description to associate to the server, max 255 characters
    """
    domain: pulumi.Output[str]
    hostname: pulumi.Output[str]
    """
    Hostname of the server
    """
    ips: pulumi.Output[list]
    name: pulumi.Output[str]
    """
    Name of the server
    """
    offer: pulumi.Output[str]
    """
    ID of the server offer
    """
    offer_id: pulumi.Output[str]
    """
    ID of the server offer
    """
    organization_id: pulumi.Output[str]
    """
    The organization_id you want to attach the resource to
    """
    os: pulumi.Output[str]
    """
    The base image of the server
    """
    os_id: pulumi.Output[str]
    """
    The base image id of the server
    """
    ssh_key_ids: pulumi.Output[list]
    """
    Array of SSH key IDs allowed to SSH to the server
    """
    tags: pulumi.Output[list]
    """
    Array of tags to associate with the server
    """
    zone: pulumi.Output[str]
    """
    The zone you want to attach the resource to
    """
    def __init__(__self__, resource_name, opts=None, description=None, hostname=None, name=None, offer=None, organization_id=None, os=None, ssh_key_ids=None, tags=None, zone=None, __props__=None, __name__=None, __opts__=None):
        """
        Create a BaremetalServer resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] description: Some description to associate to the server, max 255 characters
        :param pulumi.Input[str] hostname: Hostname of the server
        :param pulumi.Input[str] name: Name of the server
        :param pulumi.Input[str] offer: ID of the server offer
        :param pulumi.Input[str] organization_id: The organization_id you want to attach the resource to
        :param pulumi.Input[str] os: The base image of the server
        :param pulumi.Input[list] ssh_key_ids: Array of SSH key IDs allowed to SSH to the server
        :param pulumi.Input[list] tags: Array of tags to associate with the server
        :param pulumi.Input[str] zone: The zone you want to attach the resource to
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['description'] = description
            __props__['hostname'] = hostname
            __props__['name'] = name
            if offer is None:
                raise TypeError("Missing required property 'offer'")
            __props__['offer'] = offer
            __props__['organization_id'] = organization_id
            if os is None:
                raise TypeError("Missing required property 'os'")
            __props__['os'] = os
            if ssh_key_ids is None:
                raise TypeError("Missing required property 'ssh_key_ids'")
            __props__['ssh_key_ids'] = ssh_key_ids
            __props__['tags'] = tags
            __props__['zone'] = zone
            __props__['domain'] = None
            __props__['ips'] = None
            __props__['offer_id'] = None
            __props__['os_id'] = None
        super(BaremetalServer, __self__).__init__(
            'scaleway:index/baremetalServer:BaremetalServer',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None, description=None, domain=None, hostname=None, ips=None, name=None, offer=None, offer_id=None, organization_id=None, os=None, os_id=None, ssh_key_ids=None, tags=None, zone=None):
        """
        Get an existing BaremetalServer resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] description: Some description to associate to the server, max 255 characters
        :param pulumi.Input[str] hostname: Hostname of the server
        :param pulumi.Input[str] name: Name of the server
        :param pulumi.Input[str] offer: ID of the server offer
        :param pulumi.Input[str] offer_id: ID of the server offer
        :param pulumi.Input[str] organization_id: The organization_id you want to attach the resource to
        :param pulumi.Input[str] os: The base image of the server
        :param pulumi.Input[str] os_id: The base image id of the server
        :param pulumi.Input[list] ssh_key_ids: Array of SSH key IDs allowed to SSH to the server
        :param pulumi.Input[list] tags: Array of tags to associate with the server
        :param pulumi.Input[str] zone: The zone you want to attach the resource to

        The **ips** object supports the following:

          * `address` (`pulumi.Input[str]`)
          * `id` (`pulumi.Input[str]`)
          * `reverse` (`pulumi.Input[str]`)
          * `version` (`pulumi.Input[str]`)
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        __props__["description"] = description
        __props__["domain"] = domain
        __props__["hostname"] = hostname
        __props__["ips"] = ips
        __props__["name"] = name
        __props__["offer"] = offer
        __props__["offer_id"] = offer_id
        __props__["organization_id"] = organization_id
        __props__["os"] = os
        __props__["os_id"] = os_id
        __props__["ssh_key_ids"] = ssh_key_ids
        __props__["tags"] = tags
        __props__["zone"] = zone
        return BaremetalServer(resource_name, opts=opts, __props__=__props__)

    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop
