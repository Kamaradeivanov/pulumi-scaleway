// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface BaremetalServerIp {
    address?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    reverse?: pulumi.Input<string>;
    version?: pulumi.Input<string>;
}

export interface InstanceSecurityGroupInboundRule {
    action: pulumi.Input<string>;
    ip?: pulumi.Input<string>;
    ipRange?: pulumi.Input<string>;
    port?: pulumi.Input<number>;
    portRange?: pulumi.Input<string>;
    protocol?: pulumi.Input<string>;
}

export interface InstanceSecurityGroupOutboundRule {
    action: pulumi.Input<string>;
    ip?: pulumi.Input<string>;
    ipRange?: pulumi.Input<string>;
    port?: pulumi.Input<number>;
    portRange?: pulumi.Input<string>;
    protocol?: pulumi.Input<string>;
}

export interface InstanceSecurityGroupRulesInboundRule {
    action: pulumi.Input<string>;
    ip?: pulumi.Input<string>;
    ipRange?: pulumi.Input<string>;
    port?: pulumi.Input<number>;
    portRange?: pulumi.Input<string>;
    protocol?: pulumi.Input<string>;
}

export interface InstanceSecurityGroupRulesOutboundRule {
    action: pulumi.Input<string>;
    ip?: pulumi.Input<string>;
    ipRange?: pulumi.Input<string>;
    port?: pulumi.Input<number>;
    portRange?: pulumi.Input<string>;
    protocol?: pulumi.Input<string>;
}

export interface InstanceServerRootVolume {
    deleteOnTermination?: pulumi.Input<boolean>;
    sizeInGb?: pulumi.Input<number>;
    volumeId?: pulumi.Input<string>;
}

export interface InstanceServerUserData {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface K8SClusterBetaAutoUpgrade {
    enable: pulumi.Input<boolean>;
    maintenanceWindowDay: pulumi.Input<string>;
    maintenanceWindowStartHour: pulumi.Input<number>;
}

export interface K8SClusterBetaAutoscalerConfig {
    balanceSimilarNodeGroups?: pulumi.Input<boolean>;
    disableScaleDown?: pulumi.Input<boolean>;
    estimator?: pulumi.Input<string>;
    expander?: pulumi.Input<string>;
    expendablePodsPriorityCutoff?: pulumi.Input<number>;
    ignoreDaemonsetsUtilization?: pulumi.Input<boolean>;
    scaleDownDelayAfterAdd?: pulumi.Input<string>;
    scaleDownUnneededTime?: pulumi.Input<string>;
}

export interface K8SClusterBetaDefaultPool {
    /**
     * @deprecated This fields is deprecated and will be removed in the next major version, please use scaleway_k8s_pool_beta instead.
     */
    autohealing?: pulumi.Input<boolean>;
    /**
     * @deprecated This fields is deprecated and will be removed in the next major version, please use scaleway_k8s_pool_beta instead.
     */
    autoscaling?: pulumi.Input<boolean>;
    /**
     * @deprecated This fields is deprecated and will be removed in the next major version, please use scaleway_k8s_pool_beta instead.
     */
    containerRuntime?: pulumi.Input<string>;
    createdAt?: pulumi.Input<string>;
    /**
     * @deprecated This fields is deprecated and will be removed in the next major version, please use scaleway_k8s_pool_beta instead.
     */
    maxSize?: pulumi.Input<number>;
    /**
     * @deprecated This fields is deprecated and will be removed in the next major version, please use scaleway_k8s_pool_beta instead.
     */
    minSize?: pulumi.Input<number>;
    /**
     * @deprecated This fields is deprecated and will be removed in the next major version, please use scaleway_k8s_pool_beta instead.
     */
    nodeType: pulumi.Input<string>;
    nodes?: pulumi.Input<pulumi.Input<inputs.K8SClusterBetaDefaultPoolNode>[]>;
    /**
     * @deprecated This fields is deprecated and will be removed in the next major version, please use scaleway_k8s_pool_beta instead.
     */
    placementGroupId?: pulumi.Input<string>;
    poolId?: pulumi.Input<string>;
    /**
     * @deprecated This fields is deprecated and will be removed in the next major version, please use scaleway_k8s_pool_beta instead.
     */
    size: pulumi.Input<number>;
    status?: pulumi.Input<string>;
    /**
     * @deprecated This fields is deprecated and will be removed in the next major version, please use scaleway_k8s_pool_beta instead.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    updatedAt?: pulumi.Input<string>;
    /**
     * @deprecated This fields is deprecated and will be removed in the next major version, please use scaleway_k8s_pool_beta instead.
     */
    waitForPoolReady?: pulumi.Input<boolean>;
}

export interface K8SClusterBetaDefaultPoolNode {
    name?: pulumi.Input<string>;
    publicIp?: pulumi.Input<string>;
    publicIpV6?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
}

export interface K8SClusterBetaKubeconfig {
    clusterCaCertificate?: pulumi.Input<string>;
    configFile?: pulumi.Input<string>;
    host?: pulumi.Input<string>;
    token?: pulumi.Input<string>;
}

export interface K8SPoolBetaNode {
    name?: pulumi.Input<string>;
    publicIp?: pulumi.Input<string>;
    publicIpV6?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
}

export interface LbBackendBetaHealthCheckHttp {
    code?: pulumi.Input<number>;
    method?: pulumi.Input<string>;
    uri: pulumi.Input<string>;
}

export interface LbBackendBetaHealthCheckHttps {
    code?: pulumi.Input<number>;
    method?: pulumi.Input<string>;
    uri: pulumi.Input<string>;
}

export interface LbBackendBetaHealthCheckTcp {
}

export interface LbCertificateBetaCustomCertificate {
    certificateChain: pulumi.Input<string>;
}

export interface LbCertificateBetaLetsencrypt {
    commonName: pulumi.Input<string>;
    subjectAlternativeNames?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LbFrontendBetaAcl {
    action: pulumi.Input<inputs.LbFrontendBetaAclAction>;
    match: pulumi.Input<inputs.LbFrontendBetaAclMatch>;
    name?: pulumi.Input<string>;
    organizationId?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
}

export interface LbFrontendBetaAclAction {
    type: pulumi.Input<string>;
}

export interface LbFrontendBetaAclMatch {
    httpFilter?: pulumi.Input<string>;
    httpFilterValues?: pulumi.Input<pulumi.Input<string>[]>;
    invert?: pulumi.Input<boolean>;
    ipSubnets?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface RdbInstanceBetaReadReplica {
    ip?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    port?: pulumi.Input<number>;
}

export interface ServerVolume {
    sizeInGb: pulumi.Input<number>;
    type: pulumi.Input<string>;
    volumeId?: pulumi.Input<string>;
}
