// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package scaleway

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type ObjectBucket struct {
	pulumi.CustomResourceState

	// ACL of the bucket: either 'public-read' or 'private'.
	Acl pulumi.StringPtrOutput `pulumi:"acl"`
	// The name of the bucket
	Name pulumi.StringOutput `pulumi:"name"`
	// The region you want to attach the resource to
	Region pulumi.StringOutput `pulumi:"region"`
}

// NewObjectBucket registers a new resource with the given unique name, arguments, and options.
func NewObjectBucket(ctx *pulumi.Context,
	name string, args *ObjectBucketArgs, opts ...pulumi.ResourceOption) (*ObjectBucket, error) {
	if args == nil {
		args = &ObjectBucketArgs{}
	}
	var resource ObjectBucket
	err := ctx.RegisterResource("scaleway:index/objectBucket:ObjectBucket", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetObjectBucket gets an existing ObjectBucket resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetObjectBucket(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ObjectBucketState, opts ...pulumi.ResourceOption) (*ObjectBucket, error) {
	var resource ObjectBucket
	err := ctx.ReadResource("scaleway:index/objectBucket:ObjectBucket", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ObjectBucket resources.
type objectBucketState struct {
	// ACL of the bucket: either 'public-read' or 'private'.
	Acl *string `pulumi:"acl"`
	// The name of the bucket
	Name *string `pulumi:"name"`
	// The region you want to attach the resource to
	Region *string `pulumi:"region"`
}

type ObjectBucketState struct {
	// ACL of the bucket: either 'public-read' or 'private'.
	Acl pulumi.StringPtrInput
	// The name of the bucket
	Name pulumi.StringPtrInput
	// The region you want to attach the resource to
	Region pulumi.StringPtrInput
}

func (ObjectBucketState) ElementType() reflect.Type {
	return reflect.TypeOf((*objectBucketState)(nil)).Elem()
}

type objectBucketArgs struct {
	// ACL of the bucket: either 'public-read' or 'private'.
	Acl *string `pulumi:"acl"`
	// The name of the bucket
	Name *string `pulumi:"name"`
	// The region you want to attach the resource to
	Region *string `pulumi:"region"`
}

// The set of arguments for constructing a ObjectBucket resource.
type ObjectBucketArgs struct {
	// ACL of the bucket: either 'public-read' or 'private'.
	Acl pulumi.StringPtrInput
	// The name of the bucket
	Name pulumi.StringPtrInput
	// The region you want to attach the resource to
	Region pulumi.StringPtrInput
}

func (ObjectBucketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*objectBucketArgs)(nil)).Elem()
}
